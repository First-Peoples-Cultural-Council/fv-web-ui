apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elastic-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: elastic
spec:
  selector:
    app: elastic
  ports:
    - name: http
      port: 9200
      targetPort: 9200
    - name: transport
      port: 9300
      targetPort: 9300
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elastic
spec:
  replicas: 1
  strategy:
    type: Recreate
  minReadySeconds: 5
  template:
    metadata:
      name: elastic-pod
      labels:
        app: elastic
    spec:
      securityContext:
        fsGroup: 1000
      volumes:
        - name: elastic-storage
          persistentVolumeClaim:
            claimName: elastic-pvc
      initContainers:
        - name: create
          image: busybox:1.28
          command: ['mkdir', '-p', '/usr/share/elasticsearch/data/nodes/']
          volumeMounts:
            - mountPath: /usr/share/elasticsearch/data
              name: elastic-storage
        - name: file-permissions
          image: busybox:1.28
          command: ['chown', '-R', '1000:1000', '/usr/share/elasticsearch/']
          volumeMounts:
            - mountPath: /usr/share/elasticsearch/data
              name: elastic-storage
      containers:
        - name: elastic
          image: docker.elastic.co/elasticsearch/elasticsearch:6.8.14
#          image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
          resources:
            limits:
              cpu: "4"
              memory: "4800M"
          volumeMounts:
            - mountPath: "/usr/share/elasticsearch/data"
              name: elastic-storage
          livenessProbe:
            httpGet:
              path: /
              port: 9200
            initialDelaySeconds: 10
            periodSeconds: 120
          readinessProbe:
            httpGet:
              path: /
              port: 9200
            initialDelaySeconds: 3
            periodSeconds: 15
          env:
            - name: discovery.type
              value: single-node
            - name: cluster.name
              value: elastic
            - name: ES_JAVA_OPTS
              value: "-Xms4000m -Xmx4000m"
          ports:
            - name: http
              containerPort: 9200
            - name: transport
              containerPort: 9300
  selector:
    matchLabels:
      app: elastic
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: elastic
  annotations:
    # this needs to be 'public', not 'nginx', for newer versions of mk8s
    kubernetes.io/ingress.class: public
    # kubernetes.io/ingress.global-static-ip-name: fv-skaffold
    # networking.gke.io/managed-certificates: ingress-certificate
    # service.alpha.kubernetes.io/app-protocols:
    # nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/client-body-buffer-size: "500m"
    nginx.ingress.kubernetes.io/proxy-body-size: "500m"

spec:
  rules:
    - host: fves.iron.mapleleaf.intranet
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: elastic
                port:
                  number: 9200
