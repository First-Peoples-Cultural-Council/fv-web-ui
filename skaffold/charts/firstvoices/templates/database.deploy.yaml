{{ if .Values.database.deploy }}
{{- $cpu := dict "XS" "100m" "S" "250m" "M" "500m" "L" "1000m" "XL" "2000m" "XXL" "6000m" }}
{{- $mem := dict "XS" "400Mi" "S" "1000Mi" "M" "1200Mi" "L" "2500Mi" "XL" "6Gi" "XXL" "24Gi" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql-firstvoices
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  minReadySeconds: 5
  strategy:
    type: Recreate
  template:
    metadata:
      name: postgresql-firstvoices
      labels:
        app: postgresql-firstvoices
    spec:
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: postgresql-firstvoices-pv-claim
      containers:
        - name: postgresql-firstvoices
          image: postgres:13-alpine
          resources:
            requests:
              cpu: {{ get $cpu .Values.resourceSizing }}
              memory: {{ get $mem .Values.resourceSizing }}
            limits:
              cpu: {{ get $cpu .Values.resourceSizing }}
              memory: {{ get $mem .Values.resourceSizing }}
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgresql-firstvoices-credentials
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-firstvoices-credentials
                  key: password
            - name: POSTGRES_DB
              value: {{ .Values.database.inClusterConfiguration.name }}
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              name: pgdata
              subPath: data
  selector:
    matchLabels:
      app: postgresql-firstvoices
  {{ end }}
