name: Jira Transition

on:
  pull_request:
    branches:
      master
  push:
    branches:
      master
  release:
    types: [published]
  pull_request_review:
    types: [edited, dismissed, submitted]
    branches:
      master

jobs:
  Transition_DEV-IN-PROGRESS_to_DEV-DONE:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'pull_request_review'
    steps:

      # Checkout the repo
      - name: Checkout repo
        uses: actions/checkout@v1

      # Wait for checks to finish
      - name: Wait for status checks
        id: status-checks
        uses: WyriHaximus/github-action-wait-for-status@0.1.0
        with:
          ignoreActions: Transition_DEV-IN-PROGRESS_to_DEV-DONE
          checkInterval: 60
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Setup the Jira command line tool
      - name: Setup Jira CLI
        uses: atlassian/gajira-cli@master
        with:
          version:
            1.0.20

      # Login to Jira
      - name: Jira Login
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

      # Filter pull request payloads down to just the pull request title
      - name: Filter payload
        uses: Dovyski/payload-info-action@master
        id: pr-title
        with:
          filter_pull_request: '.pull_request.title'

      # Check that the issue key is present in title and exists on Jira
      # Returns true if issue key is good, false otherwise
      - name: Check that issue key exists
        id: issue-key-check
        run: |
          CHECK=$(./scripts/ci/checkIssueKey.sh ${{ steps.pr-title.outputs.value }})
          echo $CHECK
          if [[ $CHECK =~ Error: ]]; then
            exit 1
          fi
          echo "::set-output name=value::$CHECK"
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

      # Get the current code review status for pull request
      - name: Check review status
        uses: buildsville/review-summary@v1
        id: review-summary
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # If the checks have passed, and there are no pending reviews or changes requested then transition the issue to dev done
      - name: Transistion issue(s) to "DEV DONE"
        if: steps.issue-key-check.outputs.value == 'true' && steps.status-checks.outputs.status == 'success' && steps.review-summary.outputs.pending == 0 && steps.review-summary.outputs.changes_requested == 0
        run: |
          ./scripts/ci/Transition-DevInProgress-DevDone.sh ${{ steps.pr-title.outputs.value }}
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}


  Transition_DEV-DONE_to_QA-TO-DO:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:

      # Checkout the repo
      - name: Checkout repo
        uses: actions/checkout@v1

      # Setup the Jira command line tool
      - name: Setup Jira CLI
        if: github.event_name == 'push'
        uses: atlassian/gajira-cli@master
        with:
          version:
            1.0.20

      # Login to Jira
      - name: Jira Login
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

      # Filter commit payloads down to just the messages
      - name: Filter payload
        uses: Dovyski/payload-info-action@master
        id: commit-message
        with:
          filter_push: '.commits[].message'

      # Check that the issue key is present in commits and exists on Jira
      # Returns true if issue key is good, false otherwise
      - name: Check that issue key exists
        id: issue-key-check
        run: |
          CHECK=$(./scripts/ci/checkIssueKey.sh ${{ steps.commit-message.outputs.value }})
          echo $CHECK
          if [[ $CHECK =~ Error: ]]; then
            exit 1
          fi
          echo "::set-output name=value::$CHECK"
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

      # If an issue key is found in commit messages and on Jira perform transition
      - name: DEV DONE -> QA TO DO tasks
        if: steps.issue-key-check.outputs.value == 'true'
        run: |
          ./scripts/ci/Transition-DevDone-QAToDo.sh ${{ steps.commit-message.outputs.value }}
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
