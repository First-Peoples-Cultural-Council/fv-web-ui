name: Jira Transition

on:
  pull_request:
    branches:
      master
  push:
    branches:
      master
  release:
    types: [published]

jobs:
    Transition_DEV-IN-PROGRESS_to_DEV-DONE:
      runs-on: ubuntu-latest
      if: github.event_name == 'pull_request'
      steps:

        - name: Check user access
          uses: lannonbr/repo-permission-check-action@2.0.0
          with:
            permission: write
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #      # Wait for checks to finish
  #      - name: Wait for status checks
  #        if: github.event_name == 'pull_request'
  #        id: status-checks
  #        uses: WyriHaximus/github-action-wait-for-status@0.1.0
  #        with:
  #          ignoreActions: Jira Transition
  #          checkInterval: 60
  #        env:
  #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # Login to Jira
        - name: Jira Login
          uses: atlassian/gajira-login@master
          env:
            JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
            JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
            JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

  #      # Find issue key from the pull request title
  #      - name: Find issue key from pull request title
  #        if: github.event_name == 'pull_request'
  #        id: issue-key-pr
  #        uses: atlassian/gajira-find-issue-key@master
  #        with:
  #          description: github.context.payload.pull_request.title
  #
  #      # Get the current code review status for pull request
  #      - name: Check review status
  #        if: github.event_name == 'pull_request'
  #        uses: buildsville/review-summary@v1
  #        id: review-summary
  #        with:
  #          token: ${{ secrets.GITHUB_TOKEN }}
  #
  #      # If this event was triggered on a pull request, the checks have passed, and there
  #      # are no pending reviews then transition the issue to dev done
  #      - name: Transistion issue to "DEV DONE"
  #        if: github.event_name == 'pull_request' && steps.status-checks.outputs.status == 'success' && steps.review-summary.outputs.pending == 0
  #        uses: atlassian/gajira-transition@master
  #        with:
  #          issue: ${{ steps.issue-key-pr.outputs.issue }}
  #          transition: "DEV DONE"


    Transition_DEV-DONE_to_QA-TO-DO:
      runs-on: ubuntu-latest
      if: github.event_name == 'push'
      steps:

        - name: Check user access
          uses: lannonbr/repo-permission-check-action@2.0.0
          with:
            permission: write
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        - name: Checkout repo
          uses: actions/checkout@v1

        - name: Setup Jira CLI
          if: github.event_name == 'push'
          uses: atlassian/gajira-cli@master
          with:
            version:
              1.0.20

        # Login to Jira
        - name: Jira Login
          uses: atlassian/gajira-login@master
          env:
            JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
            JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
            JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

        # Filter commit payloads down to just the messages
        - name: Filter payload
          uses: Dovyski/payload-info-action@master
          id: commit-message
          with:
            filter_push: '.commits[].message'

        # Check that the issue key is present in commits and exists on Jira
        # Returns true if issue key is good, false otherwise
        - name: Check that issue key exists
          id: issue-key-check
          run: |
            CHECK=$(./scripts/ci/checkIssueKey.sh ${{ steps.commit-message.outputs.value }})
            echo $CHECK
            echo "::set-output name=value::$CHECK"
          env:
            JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
            JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
            JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

        # If an issue key is found in commit messages and on Jira perform transition
        - name: DEV DONE -> QA TO DO tasks
          if: steps.issue-key-check.outputs.value == 'true'
          run: |
            ./scripts/ci/Transition-DevDone-QAToDo.sh ${{ steps.commit-message.outputs.value }}
          env:
            JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
            JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
            JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
