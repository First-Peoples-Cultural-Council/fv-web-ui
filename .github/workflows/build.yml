name: Build

on:
  pull_request:
    branches:
      - master

jobs:
  build_linux:
    runs-on: ubuntu-latest

    steps:
      # Checkout the current working code base
      - name: Checkout working branch
        uses: actions/checkout@v2

      # Checks if any changes are made in the frontend paths listed
      - name: Check for frontend changes (v1)
        uses: softprops/diffset@v0.1.0
        id: changed-frontend
        with:
          frontend_files: |
            frontend/app/**
            frontend/build/**
            frontend/gulpfile.js/**
            frontend/nuxeo/**
            frontend/index.html
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Checks if any changes are made in the frontend V2 paths listed
      - name: Check for frontend changes (v2)
        uses: softprops/diffset@v0.1.0
        id: changed-frontend-v2
        with:
          frontend_files_v2: |
            frontend/app_v2/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Checks if any changes are made to the Node package files
      - name: Check for Node changes
        uses: softprops/diffset@v0.1.0
        id: changed-package
        with:
          package_files: |
            frontend/package.json
            frontend/package-lock.json
            package-lock.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Checks if any changes are made in the backend paths listed
      - name: Check for backend changes
        uses: softprops/diffset@v0.1.0
        id: changed-backend
        with:
          backend_files: |
            FirstVoices*/**
            FV*/**
            modules/**
            pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Setup and use custom settings xml (currently to address https://maven.apache.org/docs/3.8.1/release-notes.html#how-to-fix-when-i-get-a-http-repository-blocked)
      - name: maven-settings-xml-action
        if: steps.changed-backend.outputs.backend_files
        uses: whelk-io/maven-settings-xml-action@v14
        with:
          mirrors: '[{ "id": "secure-public", "name": "Nuxeo Secure", "mirrorOf": "public", "url": "https://maven.nuxeo.org/nexus/content/groups/public" }]'

      # Installs the correct version of java for the project
      - name: Set up JDK 11
        if: steps.changed-backend.outputs.backend_files
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # Installs the correct Node version for the project
      - name: Setup Node.js for use with actions
        if: steps.changed-backend.outputs.backend_files || steps.changed-frontend.outputs.frontend_files || steps.changed-package.outputs.package_files
        uses: actions/setup-node@v1
        with:
          node-version: "13.12.0"

      # Setup the maven build caching (~/.m2/repository directory) to restore from or save to
      - name: Cache project build
        if: steps.changed-backend.outputs.backend_files
        id: cache-build
        uses: actions/cache@v1.1.2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-JDK11-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-JDK11


        # Build only the backend if changes are made to the backend and not frontend
      - name: Build backend with Maven
        if: steps.changed-backend.outputs.backend_files
        run: mvn clean install


        # Setup the Node modules caching (~/.npm directory) to restore from or save to
        #    - name: Cache node modules
        #      if: steps.changed-backend.outputs.backend_files
        #      uses: actions/cache@v1.1.2
        #      env:
        #        cache-name: cache-node-modules
        #      with:
        #        path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
        #        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        #        restore-keys: |
        #          ${{ runner.os }}-build-${{ env.cache-name }}-
        #          ${{ runner.os }}-build-
        #          ${{ runner.os }}-


        # Build only the frontend if changes are made to the frontend(this includes installing the Node packages)
      - name: Build frontend V1 (includes Node package install)
        if: steps.changed-frontend.outputs.frontend_files
        run: |
          cd frontend
          # npm cache verify
          # npm i --no-optional
          npm ci
          npm run build:production

      - name: Build frontend V2 (includes Node package install)
        if: steps.changed-frontend.outputs.frontend_files_v2
        run: |
          cd frontend/app_v2
          npm ci
          npm run build:production

        # Run Sonar Analysis on Frontend (If Frontend Changes)
      - name: Setup Sonar Analysis For Frontend
        if: steps.changed-frontend.outputs.frontend_files
        uses: warchant/setup-sonar-scanner@v3


        # Run Sonar Analysis on Frontend (If Frontend Changes)
      - name: Sonar Analysis on Frontend
        if: steps.changed-frontend.outputs.frontend_files
        run: cd frontend && sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_LOGIN }}


        # Run Sonar Analysis on Backend (If Backend Changes)
      - name: Sonar Analysis on Backend
        if: steps.changed-backend.outputs.backend_files
        run: mvn org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_LOGIN }}
